#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Thu Feb  2 18:29:47 2017

@author: terencephilippon
"""


from __future__ import print_function
import numpy as np
import cv2
import os
import imutils
from imutils import paths

###############################################################################
if os.name == 'posix':      
    homepath = os.environ['HOME']
else: homepath = os.environ['HOMEPATH']

if os.name == 'nt':    
    # WINDOWS PATH (to video)     
    path = homepath+"\\Videos\\campus1.mp4"
else:
    # MAC OS PATH (to video)
    path = homepath+'/Python/VIDEO/Video Data/campus1.mp4' # /Users/terencephilippon
###############################################################################

# setting video to read.
cap = cv2.VideoCapture(path)
# Choosing start frame.
frame_start = 0
cap.set(1, frame_start);
fgbg = cv2.BackgroundSubtractorMOG()
(grabbed, frame) = cap.read()
origin = frame
nbframe = frame_start

while True:
    (grabbed, frame) = cap.read()

    frame = imutils.resize(frame, width=400)     # If resize is needed
    fgmask = fgbg.apply(frame)
    # ===========================================================
    # Tresholding
#    thresh = 0
#    maxValue = 255
#    th, dst = cv2.threshold(fgmask, thresh, maxValue, cv2.THRESH_BINARY);
    # ===========================================================
    # Finding contours
#    contours, hierarchy = cv2.findContours(fgmask ,cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
#    cv2.drawContours(frame,contours,-1,(0,255,0),2)
    
    # draw the text with number of people d√©tected on the frame.
#    number = len(contours)
#    cv2.putText(frame, "Counting : "+str(number),
#        (10, frame.shape[0] - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.35, (0, 0, 255), 2)
    # ===========================================================
    # Plotting and saving
    cv2.imshow('frame', frame)
#    cv2.imwrite(homepath+"\\Videos\\MOG_backgroundsub\\"+"frame_"+str(nbframe)+".png", frame)
    # ===========================================================
    nbframe += 1
    # Breaking and ending if escape is pressed.
#    k = cv2.waitKey(30) & 0xff
#    if k == 27:
#        cap.release()
#        cv2.destroyAllWindows()
#        print('interrupting...')
#        break

#cap.release()
#cv2.destroyAllWindows()
